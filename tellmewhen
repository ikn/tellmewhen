#! /usr/bin/env python3

import sys
import socket

SOCKET_HOST = 'localhost'
SOCKET_PORT = 58732


def error (*args, sock=None):
    print('error:', *args, file=sys.stderr)
    if sock:
        sock.shutdown(socket.SHUT_RDWR)
    sys.exit(1)


def send (data):
    addr = (SOCKET_HOST, SOCKET_PORT)
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.settimeout(1)
    s.connect(addr)

    sent = 0
    while sent < len(data):
        try:
            new_sent = s.send(data[sent:])
        except Exception as e:
            error('while sending:', e, sock=s)
        else:
            if new_sent == 0:
                error('server unreachable', sock=s)
            sent += new_sent
    s.shutdown(socket.SHUT_WR)

    chunks = []
    have = 0
    while have < 4:
        try:
            chunk = s.recv(4 - have)
        except Exception as e:
            error('while receiving:', e, sock=s)
        else:
            if chunk == b'':
                error('server unreachable', sock=s)
            chunks.append(chunk)
            have += len(chunk)
    s.shutdown(socket.SHUT_RD)
    s.close()

    if b''.join(chunks) != b'ack\n':
        error('server returned unexpected reply')


if __name__ == '__main__':
    if len(sys.argv) == 1:
        error('missing COMMAND argument')

    cmd = sys.argv[1]
    if cmd == 'cancel':
        if len(sys.argv) == 2:
            send(b'cancel')
        else:
            send(b'cancel ' + sys.argv[2].encode('utf-8'))
    elif cmd == 'start':
        if len(sys.argv) == 2:
            error('start: missing EVENT_NAME argument')
        send(b'start ' + sys.argv[2].encode('utf-8'))
    else:
        error('unknown command: {}'.format(repr(cmd)))
